<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="598" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="581.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="581.00"> </text><svg id="frames" x="10" width="1180" total_samples="152"><g><title>[iris_dri.so] (5 samples, 3.29%)</title><rect x="0.0000%" y="485" width="3.2895%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="495.50">[ir..</text></g><g><title>[iris_dri.so] (5 samples, 3.29%)</title><rect x="0.0000%" y="469" width="3.2895%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="479.50">[ir..</text></g><g><title>[iris_dri.so] (5 samples, 3.29%)</title><rect x="0.0000%" y="453" width="3.2895%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="5"/><text x="0.2500%" y="463.50">[ir..</text></g><g><title>pthread_cond_wait (5 samples, 3.29%)</title><rect x="0.0000%" y="437" width="3.2895%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="5"/><text x="0.2500%" y="447.50">pth..</text></g><g><title>[libc.so.6] (5 samples, 3.29%)</title><rect x="0.0000%" y="421" width="3.2895%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="5"/><text x="0.2500%" y="431.50">[li..</text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="2.6316%" y="405" width="0.6579%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="1"/><text x="2.8816%" y="415.50"></text></g><g><title>ChipRay:sh0 (6 samples, 3.95%)</title><rect x="0.0000%" y="533" width="3.9474%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="6"/><text x="0.2500%" y="543.50">Chip..</text></g><g><title>[libc.so.6] (6 samples, 3.95%)</title><rect x="0.0000%" y="517" width="3.9474%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="6"/><text x="0.2500%" y="527.50">[lib..</text></g><g><title>[libc.so.6] (6 samples, 3.95%)</title><rect x="0.0000%" y="501" width="3.9474%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="6"/><text x="0.2500%" y="511.50">[lib..</text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="3.2895%" y="485" width="0.6579%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="1"/><text x="3.5395%" y="495.50"></text></g><g><title>ChipRay:sh10 (5 samples, 3.29%)</title><rect x="3.9474%" y="533" width="3.2895%" height="15" fill="rgb(250,228,42)" fg:x="6" fg:w="5"/><text x="4.1974%" y="543.50">Chi..</text></g><g><title>[libc.so.6] (5 samples, 3.29%)</title><rect x="3.9474%" y="517" width="3.2895%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="5"/><text x="4.1974%" y="527.50">[li..</text></g><g><title>[libc.so.6] (5 samples, 3.29%)</title><rect x="3.9474%" y="501" width="3.2895%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="5"/><text x="4.1974%" y="511.50">[li..</text></g><g><title>[iris_dri.so] (5 samples, 3.29%)</title><rect x="3.9474%" y="485" width="3.2895%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="5"/><text x="4.1974%" y="495.50">[ir..</text></g><g><title>[iris_dri.so] (5 samples, 3.29%)</title><rect x="3.9474%" y="469" width="3.2895%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="5"/><text x="4.1974%" y="479.50">[ir..</text></g><g><title>[iris_dri.so] (5 samples, 3.29%)</title><rect x="3.9474%" y="453" width="3.2895%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="5"/><text x="4.1974%" y="463.50">[ir..</text></g><g><title>pthread_cond_wait (5 samples, 3.29%)</title><rect x="3.9474%" y="437" width="3.2895%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="5"/><text x="4.1974%" y="447.50">pth..</text></g><g><title>[libc.so.6] (5 samples, 3.29%)</title><rect x="3.9474%" y="421" width="3.2895%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="5"/><text x="4.1974%" y="431.50">[li..</text></g><g><title>ChipRay:sh4 (1 samples, 0.66%)</title><rect x="7.2368%" y="533" width="0.6579%" height="15" fill="rgb(221,200,47)" fg:x="11" fg:w="1"/><text x="7.4868%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.66%)</title><rect x="7.2368%" y="517" width="0.6579%" height="15" fill="rgb(226,26,5)" fg:x="11" fg:w="1"/><text x="7.4868%" y="527.50"></text></g><g><title>ChipRay:sh5 (5 samples, 3.29%)</title><rect x="7.8947%" y="533" width="3.2895%" height="15" fill="rgb(249,33,26)" fg:x="12" fg:w="5"/><text x="8.1447%" y="543.50">Chi..</text></g><g><title>[libc.so.6] (5 samples, 3.29%)</title><rect x="7.8947%" y="517" width="3.2895%" height="15" fill="rgb(235,183,28)" fg:x="12" fg:w="5"/><text x="8.1447%" y="527.50">[li..</text></g><g><title>[libc.so.6] (5 samples, 3.29%)</title><rect x="7.8947%" y="501" width="3.2895%" height="15" fill="rgb(221,5,38)" fg:x="12" fg:w="5"/><text x="8.1447%" y="511.50">[li..</text></g><g><title>[iris_dri.so] (5 samples, 3.29%)</title><rect x="7.8947%" y="485" width="3.2895%" height="15" fill="rgb(247,18,42)" fg:x="12" fg:w="5"/><text x="8.1447%" y="495.50">[ir..</text></g><g><title>[iris_dri.so] (5 samples, 3.29%)</title><rect x="7.8947%" y="469" width="3.2895%" height="15" fill="rgb(241,131,45)" fg:x="12" fg:w="5"/><text x="8.1447%" y="479.50">[ir..</text></g><g><title>[iris_dri.so] (5 samples, 3.29%)</title><rect x="7.8947%" y="453" width="3.2895%" height="15" fill="rgb(249,31,29)" fg:x="12" fg:w="5"/><text x="8.1447%" y="463.50">[ir..</text></g><g><title>pthread_cond_wait (5 samples, 3.29%)</title><rect x="7.8947%" y="437" width="3.2895%" height="15" fill="rgb(225,111,53)" fg:x="12" fg:w="5"/><text x="8.1447%" y="447.50">pth..</text></g><g><title>[libc.so.6] (5 samples, 3.29%)</title><rect x="7.8947%" y="421" width="3.2895%" height="15" fill="rgb(238,160,17)" fg:x="12" fg:w="5"/><text x="8.1447%" y="431.50">[li..</text></g><g><title>[libc.so.6] (5 samples, 3.29%)</title><rect x="7.8947%" y="405" width="3.2895%" height="15" fill="rgb(214,148,48)" fg:x="12" fg:w="5"/><text x="8.1447%" y="415.50">[li..</text></g><g><title>[libc.so.6] (4 samples, 2.63%)</title><rect x="11.1842%" y="517" width="2.6316%" height="15" fill="rgb(232,36,49)" fg:x="17" fg:w="4"/><text x="11.4342%" y="527.50">[l..</text></g><g><title>[libc.so.6] (4 samples, 2.63%)</title><rect x="11.1842%" y="501" width="2.6316%" height="15" fill="rgb(209,103,24)" fg:x="17" fg:w="4"/><text x="11.4342%" y="511.50">[l..</text></g><g><title>[iris_dri.so] (4 samples, 2.63%)</title><rect x="11.1842%" y="485" width="2.6316%" height="15" fill="rgb(229,88,8)" fg:x="17" fg:w="4"/><text x="11.4342%" y="495.50">[i..</text></g><g><title>[iris_dri.so] (4 samples, 2.63%)</title><rect x="11.1842%" y="469" width="2.6316%" height="15" fill="rgb(213,181,19)" fg:x="17" fg:w="4"/><text x="11.4342%" y="479.50">[i..</text></g><g><title>[iris_dri.so] (4 samples, 2.63%)</title><rect x="11.1842%" y="453" width="2.6316%" height="15" fill="rgb(254,191,54)" fg:x="17" fg:w="4"/><text x="11.4342%" y="463.50">[i..</text></g><g><title>pthread_cond_wait (4 samples, 2.63%)</title><rect x="11.1842%" y="437" width="2.6316%" height="15" fill="rgb(241,83,37)" fg:x="17" fg:w="4"/><text x="11.4342%" y="447.50">pt..</text></g><g><title>[libc.so.6] (4 samples, 2.63%)</title><rect x="11.1842%" y="421" width="2.6316%" height="15" fill="rgb(233,36,39)" fg:x="17" fg:w="4"/><text x="11.4342%" y="431.50">[l..</text></g><g><title>[libc.so.6] (4 samples, 2.63%)</title><rect x="11.1842%" y="405" width="2.6316%" height="15" fill="rgb(226,3,54)" fg:x="17" fg:w="4"/><text x="11.4342%" y="415.50">[l..</text></g><g><title>ChipRay:sh8 (5 samples, 3.29%)</title><rect x="11.1842%" y="533" width="3.2895%" height="15" fill="rgb(245,192,40)" fg:x="17" fg:w="5"/><text x="11.4342%" y="543.50">Chi..</text></g><g><title>[unknown] (1 samples, 0.66%)</title><rect x="13.8158%" y="517" width="0.6579%" height="15" fill="rgb(238,167,29)" fg:x="21" fg:w="1"/><text x="14.0658%" y="527.50"></text></g><g><title>[ChipRay] (1 samples, 0.66%)</title><rect x="14.4737%" y="517" width="0.6579%" height="15" fill="rgb(232,182,51)" fg:x="22" fg:w="1"/><text x="14.7237%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.66%)</title><rect x="14.4737%" y="501" width="0.6579%" height="15" fill="rgb(231,60,39)" fg:x="22" fg:w="1"/><text x="14.7237%" y="511.50"></text></g><g><title>ChipRay::amain::{{closure}} (1 samples, 0.66%)</title><rect x="14.4737%" y="485" width="0.6579%" height="15" fill="rgb(208,69,12)" fg:x="22" fg:w="1"/><text x="14.7237%" y="495.50"></text></g><g><title>[[heap]] (8 samples, 5.26%)</title><rect x="15.1316%" y="517" width="5.2632%" height="15" fill="rgb(235,93,37)" fg:x="23" fg:w="8"/><text x="15.3816%" y="527.50">[[heap..</text></g><g><title>[libc.so.6] (8 samples, 5.26%)</title><rect x="15.1316%" y="501" width="5.2632%" height="15" fill="rgb(213,116,39)" fg:x="23" fg:w="8"/><text x="15.3816%" y="511.50">[libc...</text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.66%)</title><rect x="20.3947%" y="501" width="0.6579%" height="15" fill="rgb(222,207,29)" fg:x="31" fg:w="1"/><text x="20.6447%" y="511.50"></text></g><g><title>[anon] (2 samples, 1.32%)</title><rect x="20.3947%" y="517" width="1.3158%" height="15" fill="rgb(206,96,30)" fg:x="31" fg:w="2"/><text x="20.6447%" y="527.50"></text></g><g><title>[libspa-audioconvert.so] (1 samples, 0.66%)</title><rect x="21.0526%" y="501" width="0.6579%" height="15" fill="rgb(218,138,4)" fg:x="32" fg:w="1"/><text x="21.3026%" y="511.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 3.95%)</title><rect x="21.7105%" y="517" width="3.9474%" height="15" fill="rgb(250,191,14)" fg:x="33" fg:w="6"/><text x="21.9605%" y="527.50">[ld-..</text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 1.32%)</title><rect x="24.3421%" y="501" width="1.3158%" height="15" fill="rgb(239,60,40)" fg:x="37" fg:w="2"/><text x="24.5921%" y="511.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 1.32%)</title><rect x="24.3421%" y="485" width="1.3158%" height="15" fill="rgb(206,27,48)" fg:x="37" fg:w="2"/><text x="24.5921%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 1.32%)</title><rect x="24.3421%" y="469" width="1.3158%" height="15" fill="rgb(225,35,8)" fg:x="37" fg:w="2"/><text x="24.5921%" y="479.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.66%)</title><rect x="25.0000%" y="453" width="0.6579%" height="15" fill="rgb(250,213,24)" fg:x="38" fg:w="1"/><text x="25.2500%" y="463.50"></text></g><g><title>[libGLdispatch.so.0.0.0] (1 samples, 0.66%)</title><rect x="25.6579%" y="517" width="0.6579%" height="15" fill="rgb(247,123,22)" fg:x="39" fg:w="1"/><text x="25.9079%" y="527.50"></text></g><g><title>__mmap (1 samples, 0.66%)</title><rect x="29.6053%" y="405" width="0.6579%" height="15" fill="rgb(231,138,38)" fg:x="45" fg:w="1"/><text x="29.8553%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.66%)</title><rect x="29.6053%" y="389" width="0.6579%" height="15" fill="rgb(231,145,46)" fg:x="45" fg:w="1"/><text x="29.8553%" y="399.50"></text></g><g><title>[iris_dri.so] (5 samples, 3.29%)</title><rect x="27.6316%" y="485" width="3.2895%" height="15" fill="rgb(251,118,11)" fg:x="42" fg:w="5"/><text x="27.8816%" y="495.50">[ir..</text></g><g><title>cfree (5 samples, 3.29%)</title><rect x="27.6316%" y="469" width="3.2895%" height="15" fill="rgb(217,147,25)" fg:x="42" fg:w="5"/><text x="27.8816%" y="479.50">cfr..</text></g><g><title>[libc.so.6] (5 samples, 3.29%)</title><rect x="27.6316%" y="453" width="3.2895%" height="15" fill="rgb(247,81,37)" fg:x="42" fg:w="5"/><text x="27.8816%" y="463.50">[li..</text></g><g><title>[libc.so.6] (4 samples, 2.63%)</title><rect x="28.2895%" y="437" width="2.6316%" height="15" fill="rgb(209,12,38)" fg:x="43" fg:w="4"/><text x="28.5395%" y="447.50">[l..</text></g><g><title>[libc.so.6] (2 samples, 1.32%)</title><rect x="29.6053%" y="421" width="1.3158%" height="15" fill="rgb(227,1,9)" fg:x="45" fg:w="2"/><text x="29.8553%" y="431.50"></text></g><g><title>__munmap (1 samples, 0.66%)</title><rect x="30.2632%" y="405" width="0.6579%" height="15" fill="rgb(248,47,43)" fg:x="46" fg:w="1"/><text x="30.5132%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.66%)</title><rect x="30.2632%" y="389" width="0.6579%" height="15" fill="rgb(221,10,30)" fg:x="46" fg:w="1"/><text x="30.5132%" y="399.50"></text></g><g><title>[libpipewire-0.3.so.0.359.0] (2 samples, 1.32%)</title><rect x="32.8947%" y="405" width="1.3158%" height="15" fill="rgb(210,229,1)" fg:x="50" fg:w="2"/><text x="33.1447%" y="415.50"></text></g><g><title>[libasound_module_pcm_pipewire.so] (1 samples, 0.66%)</title><rect x="33.5526%" y="389" width="0.6579%" height="15" fill="rgb(222,148,37)" fg:x="51" fg:w="1"/><text x="33.8026%" y="399.50"></text></g><g><title>[libasound_module_pcm_pipewire.so] (1 samples, 0.66%)</title><rect x="33.5526%" y="373" width="0.6579%" height="15" fill="rgb(234,67,33)" fg:x="51" fg:w="1"/><text x="33.8026%" y="383.50"></text></g><g><title>[libpipewire-0.3.so.0.359.0] (10 samples, 6.58%)</title><rect x="31.5789%" y="453" width="6.5789%" height="15" fill="rgb(247,98,35)" fg:x="48" fg:w="10"/><text x="31.8289%" y="463.50">[libpipew..</text></g><g><title>[libpipewire-0.3.so.0.359.0] (9 samples, 5.92%)</title><rect x="32.2368%" y="437" width="5.9211%" height="15" fill="rgb(247,138,52)" fg:x="49" fg:w="9"/><text x="32.4868%" y="447.50">[libpipe..</text></g><g><title>[libspa-audioconvert.so] (8 samples, 5.26%)</title><rect x="32.8947%" y="421" width="5.2632%" height="15" fill="rgb(213,79,30)" fg:x="50" fg:w="8"/><text x="33.1447%" y="431.50">[libsp..</text></g><g><title>[libspa-audioconvert.so] (6 samples, 3.95%)</title><rect x="34.2105%" y="405" width="3.9474%" height="15" fill="rgb(246,177,23)" fg:x="52" fg:w="6"/><text x="34.4605%" y="415.50">[lib..</text></g><g><title>[libspa-audioconvert.so] (6 samples, 3.95%)</title><rect x="34.2105%" y="389" width="3.9474%" height="15" fill="rgb(230,62,27)" fg:x="52" fg:w="6"/><text x="34.4605%" y="399.50">[lib..</text></g><g><title>[libspa-audioconvert.so] (6 samples, 3.95%)</title><rect x="34.2105%" y="373" width="3.9474%" height="15" fill="rgb(216,154,8)" fg:x="52" fg:w="6"/><text x="34.4605%" y="383.50">[lib..</text></g><g><title>[libpipewire-0.3.so.0.359.0] (12 samples, 7.89%)</title><rect x="30.9211%" y="485" width="7.8947%" height="15" fill="rgb(244,35,45)" fg:x="47" fg:w="12"/><text x="31.1711%" y="495.50">[libpipewir..</text></g><g><title>[libspa-support.so] (11 samples, 7.24%)</title><rect x="31.5789%" y="469" width="7.2368%" height="15" fill="rgb(251,115,12)" fg:x="48" fg:w="11"/><text x="31.8289%" y="479.50">[libspa-su..</text></g><g><title>[libspa-support.so] (1 samples, 0.66%)</title><rect x="38.1579%" y="453" width="0.6579%" height="15" fill="rgb(240,54,50)" fg:x="58" fg:w="1"/><text x="38.4079%" y="463.50"></text></g><g><title>[libspa-support.so] (1 samples, 0.66%)</title><rect x="38.1579%" y="437" width="0.6579%" height="15" fill="rgb(233,84,52)" fg:x="58" fg:w="1"/><text x="38.4079%" y="447.50"></text></g><g><title>[libpipewire-module-client-node.so] (1 samples, 0.66%)</title><rect x="38.1579%" y="421" width="0.6579%" height="15" fill="rgb(207,117,47)" fg:x="58" fg:w="1"/><text x="38.4079%" y="431.50"></text></g><g><title>[libc.so.6] (31 samples, 20.39%)</title><rect x="26.3158%" y="517" width="20.3947%" height="15" fill="rgb(249,43,39)" fg:x="40" fg:w="31"/><text x="26.5658%" y="527.50">[libc.so.6]</text></g><g><title>[libc.so.6] (29 samples, 19.08%)</title><rect x="27.6316%" y="501" width="19.0789%" height="15" fill="rgb(209,38,44)" fg:x="42" fg:w="29"/><text x="27.8816%" y="511.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (12 samples, 7.89%)</title><rect x="38.8158%" y="485" width="7.8947%" height="15" fill="rgb(236,212,23)" fg:x="59" fg:w="12"/><text x="39.0658%" y="495.50">std::sys::u..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 7.89%)</title><rect x="38.8158%" y="469" width="7.8947%" height="15" fill="rgb(242,79,21)" fg:x="59" fg:w="12"/><text x="39.0658%" y="479.50">&lt;alloc::box..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 7.89%)</title><rect x="38.8158%" y="453" width="7.8947%" height="15" fill="rgb(211,96,35)" fg:x="59" fg:w="12"/><text x="39.0658%" y="463.50">&lt;alloc::box..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (12 samples, 7.89%)</title><rect x="38.8158%" y="437" width="7.8947%" height="15" fill="rgb(253,215,40)" fg:x="59" fg:w="12"/><text x="39.0658%" y="447.50">core::ops::..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (12 samples, 7.89%)</title><rect x="38.8158%" y="421" width="7.8947%" height="15" fill="rgb(211,81,21)" fg:x="59" fg:w="12"/><text x="39.0658%" y="431.50">std::thread..</text></g><g><title>std::panic::catch_unwind (12 samples, 7.89%)</title><rect x="38.8158%" y="405" width="7.8947%" height="15" fill="rgb(208,190,38)" fg:x="59" fg:w="12"/><text x="39.0658%" y="415.50">std::panic:..</text></g><g><title>std::panicking::try (12 samples, 7.89%)</title><rect x="38.8158%" y="389" width="7.8947%" height="15" fill="rgb(235,213,38)" fg:x="59" fg:w="12"/><text x="39.0658%" y="399.50">std::panick..</text></g><g><title>std::panicking::try::do_call (12 samples, 7.89%)</title><rect x="38.8158%" y="373" width="7.8947%" height="15" fill="rgb(237,122,38)" fg:x="59" fg:w="12"/><text x="39.0658%" y="383.50">std::panick..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 7.89%)</title><rect x="38.8158%" y="357" width="7.8947%" height="15" fill="rgb(244,218,35)" fg:x="59" fg:w="12"/><text x="39.0658%" y="367.50">&lt;core::pani..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (12 samples, 7.89%)</title><rect x="38.8158%" y="341" width="7.8947%" height="15" fill="rgb(240,68,47)" fg:x="59" fg:w="12"/><text x="39.0658%" y="351.50">std::thread..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 7.89%)</title><rect x="38.8158%" y="325" width="7.8947%" height="15" fill="rgb(210,16,53)" fg:x="59" fg:w="12"/><text x="39.0658%" y="335.50">std::sys_co..</text></g><g><title>quad_snd::snd::AudioContext::new::{{closure}} (12 samples, 7.89%)</title><rect x="38.8158%" y="309" width="7.8947%" height="15" fill="rgb(235,124,12)" fg:x="59" fg:w="12"/><text x="39.0658%" y="319.50">quad_snd::s..</text></g><g><title>quad_snd::snd::audio_thread (12 samples, 7.89%)</title><rect x="38.8158%" y="293" width="7.8947%" height="15" fill="rgb(224,169,11)" fg:x="59" fg:w="12"/><text x="39.0658%" y="303.50">quad_snd::s..</text></g><g><title>[libasound.so.2.0.0] (12 samples, 7.89%)</title><rect x="38.8158%" y="277" width="7.8947%" height="15" fill="rgb(250,166,2)" fg:x="59" fg:w="12"/><text x="39.0658%" y="287.50">[libasound...</text></g><g><title>snd_pcm_mmap_writei (12 samples, 7.89%)</title><rect x="38.8158%" y="261" width="7.8947%" height="15" fill="rgb(242,216,29)" fg:x="59" fg:w="12"/><text x="39.0658%" y="271.50">snd_pcm_mma..</text></g><g><title>[libasound.so.2.0.0] (12 samples, 7.89%)</title><rect x="38.8158%" y="245" width="7.8947%" height="15" fill="rgb(230,116,27)" fg:x="59" fg:w="12"/><text x="39.0658%" y="255.50">[libasound...</text></g><g><title>[libasound.so.2.0.0] (12 samples, 7.89%)</title><rect x="38.8158%" y="229" width="7.8947%" height="15" fill="rgb(228,99,48)" fg:x="59" fg:w="12"/><text x="39.0658%" y="239.50">[libasound...</text></g><g><title>__poll (10 samples, 6.58%)</title><rect x="40.1316%" y="213" width="6.5789%" height="15" fill="rgb(253,11,6)" fg:x="61" fg:w="10"/><text x="40.3816%" y="223.50">__poll</text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="46.0526%" y="197" width="0.6579%" height="15" fill="rgb(247,143,39)" fg:x="70" fg:w="1"/><text x="46.3026%" y="207.50"></text></g><g><title>[libspa-audioconvert.so] (1 samples, 0.66%)</title><rect x="46.7105%" y="517" width="0.6579%" height="15" fill="rgb(236,97,10)" fg:x="71" fg:w="1"/><text x="46.9605%" y="527.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="54.6053%" y="501" width="0.6579%" height="15" fill="rgb(233,208,19)" fg:x="83" fg:w="1"/><text x="54.8553%" y="511.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.66%)</title><rect x="55.2632%" y="501" width="0.6579%" height="15" fill="rgb(216,164,2)" fg:x="84" fg:w="1"/><text x="55.5132%" y="511.50"></text></g><g><title>[libglapi.so.0.0.0] (1 samples, 0.66%)</title><rect x="55.9211%" y="501" width="0.6579%" height="15" fill="rgb(220,129,5)" fg:x="85" fg:w="1"/><text x="56.1711%" y="511.50"></text></g><g><title>miniquad::native::linux_x11::X11Display::update_system_dpi (1 samples, 0.66%)</title><rect x="56.5789%" y="453" width="0.6579%" height="15" fill="rgb(242,17,10)" fg:x="86" fg:w="1"/><text x="56.8289%" y="463.50"></text></g><g><title>XrmGetStringDatabase (1 samples, 0.66%)</title><rect x="56.5789%" y="437" width="0.6579%" height="15" fill="rgb(242,107,0)" fg:x="86" fg:w="1"/><text x="56.8289%" y="447.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.66%)</title><rect x="56.5789%" y="421" width="0.6579%" height="15" fill="rgb(251,28,31)" fg:x="86" fg:w="1"/><text x="56.8289%" y="431.50"></text></g><g><title>_XrmInitParseInfo (1 samples, 0.66%)</title><rect x="56.5789%" y="405" width="0.6579%" height="15" fill="rgb(233,223,10)" fg:x="86" fg:w="1"/><text x="56.8289%" y="415.50"></text></g><g><title>_XOpenLC (1 samples, 0.66%)</title><rect x="56.5789%" y="389" width="0.6579%" height="15" fill="rgb(215,21,27)" fg:x="86" fg:w="1"/><text x="56.8289%" y="399.50"></text></g><g><title>_XlcUtf8Loader (1 samples, 0.66%)</title><rect x="56.5789%" y="373" width="0.6579%" height="15" fill="rgb(232,23,21)" fg:x="86" fg:w="1"/><text x="56.8289%" y="383.50"></text></g><g><title>_XlcCreateLC (1 samples, 0.66%)</title><rect x="56.5789%" y="357" width="0.6579%" height="15" fill="rgb(244,5,23)" fg:x="86" fg:w="1"/><text x="56.8289%" y="367.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.66%)</title><rect x="56.5789%" y="341" width="0.6579%" height="15" fill="rgb(226,81,46)" fg:x="86" fg:w="1"/><text x="56.8289%" y="351.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.66%)</title><rect x="56.5789%" y="325" width="0.6579%" height="15" fill="rgb(247,70,30)" fg:x="86" fg:w="1"/><text x="56.8289%" y="335.50"></text></g><g><title>_XlcResolveLocaleName (1 samples, 0.66%)</title><rect x="56.5789%" y="309" width="0.6579%" height="15" fill="rgb(212,68,19)" fg:x="86" fg:w="1"/><text x="56.8289%" y="319.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.66%)</title><rect x="56.5789%" y="293" width="0.6579%" height="15" fill="rgb(240,187,13)" fg:x="86" fg:w="1"/><text x="56.8289%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.66%)</title><rect x="59.2105%" y="309" width="0.6579%" height="15" fill="rgb(223,113,26)" fg:x="90" fg:w="1"/><text x="59.4605%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.66%)</title><rect x="59.2105%" y="293" width="0.6579%" height="15" fill="rgb(206,192,2)" fg:x="90" fg:w="1"/><text x="59.4605%" y="303.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.66%)</title><rect x="59.2105%" y="277" width="0.6579%" height="15" fill="rgb(241,108,4)" fg:x="90" fg:w="1"/><text x="59.4605%" y="287.50"></text></g><g><title>&lt;macroquad::quad_gl::Vertex as core::convert::Into&lt;([f32: 3],[f32: 2],[f32: 4])&gt;&gt;::into (2 samples, 1.32%)</title><rect x="59.8684%" y="309" width="1.3158%" height="15" fill="rgb(247,173,49)" fg:x="91" fg:w="2"/><text x="60.1184%" y="319.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::ne (1 samples, 0.66%)</title><rect x="61.1842%" y="277" width="0.6579%" height="15" fill="rgb(224,114,35)" fg:x="93" fg:w="1"/><text x="61.4342%" y="287.50"></text></g><g><title>macroquad::shapes::draw_rectangle (7 samples, 4.61%)</title><rect x="57.8947%" y="341" width="4.6053%" height="15" fill="rgb(245,159,27)" fg:x="88" fg:w="7"/><text x="58.1447%" y="351.50">macro..</text></g><g><title>macroquad::quad_gl::QuadGl::geometry (7 samples, 4.61%)</title><rect x="57.8947%" y="325" width="4.6053%" height="15" fill="rgb(245,172,44)" fg:x="88" fg:w="7"/><text x="58.1447%" y="335.50">macro..</text></g><g><title>core::option::Option&lt;T&gt;::map_or (2 samples, 1.32%)</title><rect x="61.1842%" y="309" width="1.3158%" height="15" fill="rgb(236,23,11)" fg:x="93" fg:w="2"/><text x="61.4342%" y="319.50"></text></g><g><title>macroquad::quad_gl::QuadGl::geometry::{{closure}} (2 samples, 1.32%)</title><rect x="61.1842%" y="293" width="1.3158%" height="15" fill="rgb(205,117,38)" fg:x="93" fg:w="2"/><text x="61.4342%" y="303.50"></text></g><g><title>core::cmp::PartialEq::ne (1 samples, 0.66%)</title><rect x="61.8421%" y="277" width="0.6579%" height="15" fill="rgb(237,72,25)" fg:x="94" fg:w="1"/><text x="62.0921%" y="287.50"></text></g><g><title>&lt;glam::f32::scalar::mat4::Mat4 as core::cmp::PartialEq&gt;::eq (1 samples, 0.66%)</title><rect x="61.8421%" y="261" width="0.6579%" height="15" fill="rgb(244,70,9)" fg:x="94" fg:w="1"/><text x="62.0921%" y="271.50"></text></g><g><title>&lt;glam::f32::scalar::vec4::Vec4 as core::cmp::PartialEq&gt;::eq (1 samples, 0.66%)</title><rect x="61.8421%" y="245" width="0.6579%" height="15" fill="rgb(217,125,39)" fg:x="94" fg:w="1"/><text x="62.0921%" y="255.50"></text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::maybe_unwind (9 samples, 5.92%)</title><rect x="57.2368%" y="421" width="5.9211%" height="15" fill="rgb(235,36,10)" fg:x="87" fg:w="9"/><text x="57.4868%" y="431.50">&lt;macroqu..</text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::{{closure}} (9 samples, 5.92%)</title><rect x="57.2368%" y="405" width="5.9211%" height="15" fill="rgb(251,123,47)" fg:x="87" fg:w="9"/><text x="57.4868%" y="415.50">&lt;macroqu..</text></g><g><title>macroquad::exec::resume (9 samples, 5.92%)</title><rect x="57.2368%" y="389" width="5.9211%" height="15" fill="rgb(221,13,13)" fg:x="87" fg:w="9"/><text x="57.4868%" y="399.50">macroqua..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 5.92%)</title><rect x="57.2368%" y="373" width="5.9211%" height="15" fill="rgb(238,131,9)" fg:x="87" fg:w="9"/><text x="57.4868%" y="383.50">&lt;core::f..</text></g><g><title>ChipRay::amain::{{closure}} (9 samples, 5.92%)</title><rect x="57.2368%" y="357" width="5.9211%" height="15" fill="rgb(211,50,8)" fg:x="87" fg:w="9"/><text x="57.4868%" y="367.50">ChipRay:..</text></g><g><title>macroquad::window::clear_background (1 samples, 0.66%)</title><rect x="62.5000%" y="341" width="0.6579%" height="15" fill="rgb(245,182,24)" fg:x="95" fg:w="1"/><text x="62.7500%" y="351.50"></text></g><g><title>macroquad::quad_gl::QuadGl::clear (1 samples, 0.66%)</title><rect x="62.5000%" y="325" width="0.6579%" height="15" fill="rgb(242,14,37)" fg:x="95" fg:w="1"/><text x="62.7500%" y="335.50"></text></g><g><title>miniquad::graphics::GraphicsContext::begin_default_pass (1 samples, 0.66%)</title><rect x="62.5000%" y="309" width="0.6579%" height="15" fill="rgb(246,228,12)" fg:x="95" fg:w="1"/><text x="62.7500%" y="319.50"></text></g><g><title>miniquad::graphics::GraphicsContext::begin_pass (1 samples, 0.66%)</title><rect x="62.5000%" y="293" width="0.6579%" height="15" fill="rgb(213,55,15)" fg:x="95" fg:w="1"/><text x="62.7500%" y="303.50"></text></g><g><title>miniquad::native::gl::glViewport (1 samples, 0.66%)</title><rect x="62.5000%" y="277" width="0.6579%" height="15" fill="rgb(209,9,3)" fg:x="95" fg:w="1"/><text x="62.7500%" y="287.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="62.5000%" y="261" width="0.6579%" height="15" fill="rgb(230,59,30)" fg:x="95" fg:w="1"/><text x="62.7500%" y="271.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="62.5000%" y="245" width="0.6579%" height="15" fill="rgb(209,121,21)" fg:x="95" fg:w="1"/><text x="62.7500%" y="255.50"></text></g><g><title>[iris_dri.so] (3 samples, 1.97%)</title><rect x="63.1579%" y="421" width="1.9737%" height="15" fill="rgb(220,109,13)" fg:x="96" fg:w="3"/><text x="63.4079%" y="431.50">[..</text></g><g><title>[iris_dri.so] (3 samples, 1.97%)</title><rect x="63.1579%" y="405" width="1.9737%" height="15" fill="rgb(232,18,1)" fg:x="96" fg:w="3"/><text x="63.4079%" y="415.50">[..</text></g><g><title>[iris_dri.so] (3 samples, 1.97%)</title><rect x="63.1579%" y="389" width="1.9737%" height="15" fill="rgb(215,41,42)" fg:x="96" fg:w="3"/><text x="63.4079%" y="399.50">[..</text></g><g><title>[libGLX_mesa.so.0.0.0] (2 samples, 1.32%)</title><rect x="63.8158%" y="373" width="1.3158%" height="15" fill="rgb(224,123,36)" fg:x="97" fg:w="2"/><text x="64.0658%" y="383.50"></text></g><g><title>glPrimitiveBoundingBox (2 samples, 1.32%)</title><rect x="63.8158%" y="357" width="1.3158%" height="15" fill="rgb(240,125,3)" fg:x="97" fg:w="2"/><text x="64.0658%" y="367.50"></text></g><g><title>xcb_wait_for_special_event (2 samples, 1.32%)</title><rect x="63.8158%" y="341" width="1.3158%" height="15" fill="rgb(205,98,50)" fg:x="97" fg:w="2"/><text x="64.0658%" y="351.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 1.32%)</title><rect x="63.8158%" y="325" width="1.3158%" height="15" fill="rgb(205,185,37)" fg:x="97" fg:w="2"/><text x="64.0658%" y="335.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.66%)</title><rect x="64.4737%" y="309" width="0.6579%" height="15" fill="rgb(238,207,15)" fg:x="98" fg:w="1"/><text x="64.7237%" y="319.50"></text></g><g><title>malloc (1 samples, 0.66%)</title><rect x="64.4737%" y="293" width="0.6579%" height="15" fill="rgb(213,199,42)" fg:x="98" fg:w="1"/><text x="64.7237%" y="303.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="65.7895%" y="245" width="0.6579%" height="15" fill="rgb(235,201,11)" fg:x="100" fg:w="1"/><text x="66.0395%" y="255.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="65.7895%" y="229" width="0.6579%" height="15" fill="rgb(207,46,11)" fg:x="100" fg:w="1"/><text x="66.0395%" y="239.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="65.7895%" y="213" width="0.6579%" height="15" fill="rgb(241,35,35)" fg:x="100" fg:w="1"/><text x="66.0395%" y="223.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="65.7895%" y="197" width="0.6579%" height="15" fill="rgb(243,32,47)" fg:x="100" fg:w="1"/><text x="66.0395%" y="207.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (6 samples, 3.95%)</title><rect x="65.7895%" y="261" width="3.9474%" height="15" fill="rgb(247,202,23)" fg:x="100" fg:w="6"/><text x="66.0395%" y="271.50">[lib..</text></g><g><title>xcb_wait_for_reply (5 samples, 3.29%)</title><rect x="66.4474%" y="245" width="3.2895%" height="15" fill="rgb(219,102,11)" fg:x="101" fg:w="5"/><text x="66.6974%" y="255.50">xcb..</text></g><g><title>[libxcb.so.1.1.0] (5 samples, 3.29%)</title><rect x="66.4474%" y="229" width="3.2895%" height="15" fill="rgb(243,110,44)" fg:x="101" fg:w="5"/><text x="66.6974%" y="239.50">[li..</text></g><g><title>[libxcb.so.1.1.0] (5 samples, 3.29%)</title><rect x="66.4474%" y="213" width="3.2895%" height="15" fill="rgb(222,74,54)" fg:x="101" fg:w="5"/><text x="66.6974%" y="223.50">[li..</text></g><g><title>__poll (5 samples, 3.29%)</title><rect x="66.4474%" y="197" width="3.2895%" height="15" fill="rgb(216,99,12)" fg:x="101" fg:w="5"/><text x="66.6974%" y="207.50">__p..</text></g><g><title>macroquad::Context::begin_frame (12 samples, 7.89%)</title><rect x="65.1316%" y="421" width="7.8947%" height="15" fill="rgb(226,22,26)" fg:x="99" fg:w="12"/><text x="65.3816%" y="431.50">macroquad::..</text></g><g><title>[iris_dri.so] (12 samples, 7.89%)</title><rect x="65.1316%" y="405" width="7.8947%" height="15" fill="rgb(217,163,10)" fg:x="99" fg:w="12"/><text x="65.3816%" y="415.50">[iris_dri.s..</text></g><g><title>[iris_dri.so] (12 samples, 7.89%)</title><rect x="65.1316%" y="389" width="7.8947%" height="15" fill="rgb(213,25,53)" fg:x="99" fg:w="12"/><text x="65.3816%" y="399.50">[iris_dri.s..</text></g><g><title>[iris_dri.so] (12 samples, 7.89%)</title><rect x="65.1316%" y="373" width="7.8947%" height="15" fill="rgb(252,105,26)" fg:x="99" fg:w="12"/><text x="65.3816%" y="383.50">[iris_dri.s..</text></g><g><title>[iris_dri.so] (12 samples, 7.89%)</title><rect x="65.1316%" y="357" width="7.8947%" height="15" fill="rgb(220,39,43)" fg:x="99" fg:w="12"/><text x="65.3816%" y="367.50">[iris_dri.s..</text></g><g><title>[iris_dri.so] (12 samples, 7.89%)</title><rect x="65.1316%" y="341" width="7.8947%" height="15" fill="rgb(229,68,48)" fg:x="99" fg:w="12"/><text x="65.3816%" y="351.50">[iris_dri.s..</text></g><g><title>[iris_dri.so] (12 samples, 7.89%)</title><rect x="65.1316%" y="325" width="7.8947%" height="15" fill="rgb(252,8,32)" fg:x="99" fg:w="12"/><text x="65.3816%" y="335.50">[iris_dri.s..</text></g><g><title>[iris_dri.so] (12 samples, 7.89%)</title><rect x="65.1316%" y="309" width="7.8947%" height="15" fill="rgb(223,20,43)" fg:x="99" fg:w="12"/><text x="65.3816%" y="319.50">[iris_dri.s..</text></g><g><title>[libGLX_mesa.so.0.0.0] (11 samples, 7.24%)</title><rect x="65.7895%" y="293" width="7.2368%" height="15" fill="rgb(229,81,49)" fg:x="100" fg:w="11"/><text x="66.0395%" y="303.50">[libGLX_me..</text></g><g><title>[libGLX_mesa.so.0.0.0] (11 samples, 7.24%)</title><rect x="65.7895%" y="277" width="7.2368%" height="15" fill="rgb(236,28,36)" fg:x="100" fg:w="11"/><text x="66.0395%" y="287.50">[libGLX_me..</text></g><g><title>glPrimitiveBoundingBox (5 samples, 3.29%)</title><rect x="69.7368%" y="261" width="3.2895%" height="15" fill="rgb(249,185,26)" fg:x="106" fg:w="5"/><text x="69.9868%" y="271.50">glP..</text></g><g><title>xcb_sync_destroy_fence (5 samples, 3.29%)</title><rect x="69.7368%" y="245" width="3.2895%" height="15" fill="rgb(249,174,33)" fg:x="106" fg:w="5"/><text x="69.9868%" y="255.50">xcb..</text></g><g><title>xcb_send_request (5 samples, 3.29%)</title><rect x="69.7368%" y="229" width="3.2895%" height="15" fill="rgb(233,201,37)" fg:x="106" fg:w="5"/><text x="69.9868%" y="239.50">xcb..</text></g><g><title>xcb_send_request_with_fds64 (5 samples, 3.29%)</title><rect x="69.7368%" y="213" width="3.2895%" height="15" fill="rgb(221,78,26)" fg:x="106" fg:w="5"/><text x="69.9868%" y="223.50">xcb..</text></g><g><title>xcb_get_extension_data (5 samples, 3.29%)</title><rect x="69.7368%" y="197" width="3.2895%" height="15" fill="rgb(250,127,30)" fg:x="106" fg:w="5"/><text x="69.9868%" y="207.50">xcb..</text></g><g><title>xcb_wait_for_reply (5 samples, 3.29%)</title><rect x="69.7368%" y="181" width="3.2895%" height="15" fill="rgb(230,49,44)" fg:x="106" fg:w="5"/><text x="69.9868%" y="191.50">xcb..</text></g><g><title>[libxcb.so.1.1.0] (5 samples, 3.29%)</title><rect x="69.7368%" y="165" width="3.2895%" height="15" fill="rgb(229,67,23)" fg:x="106" fg:w="5"/><text x="69.9868%" y="175.50">[li..</text></g><g><title>[libxcb.so.1.1.0] (5 samples, 3.29%)</title><rect x="69.7368%" y="149" width="3.2895%" height="15" fill="rgb(249,83,47)" fg:x="106" fg:w="5"/><text x="69.9868%" y="159.50">[li..</text></g><g><title>__poll (5 samples, 3.29%)</title><rect x="69.7368%" y="133" width="3.2895%" height="15" fill="rgb(215,43,3)" fg:x="106" fg:w="5"/><text x="69.9868%" y="143.50">__p..</text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="72.3684%" y="117" width="0.6579%" height="15" fill="rgb(238,154,13)" fg:x="110" fg:w="1"/><text x="72.6184%" y="127.50"></text></g><g><title>miniquad::graphics::GraphicsContext::apply_bindings (1 samples, 0.66%)</title><rect x="73.0263%" y="325" width="0.6579%" height="15" fill="rgb(219,56,2)" fg:x="111" fg:w="1"/><text x="73.2763%" y="335.50"></text></g><g><title>miniquad::native::gl::glVertexAttribPointer (1 samples, 0.66%)</title><rect x="73.0263%" y="309" width="0.6579%" height="15" fill="rgb(233,0,4)" fg:x="111" fg:w="1"/><text x="73.2763%" y="319.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="73.0263%" y="293" width="0.6579%" height="15" fill="rgb(235,30,7)" fg:x="111" fg:w="1"/><text x="73.2763%" y="303.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="73.0263%" y="277" width="0.6579%" height="15" fill="rgb(250,79,13)" fg:x="111" fg:w="1"/><text x="73.2763%" y="287.50"></text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw (26 samples, 17.11%)</title><rect x="57.2368%" y="437" width="17.1053%" height="15" fill="rgb(211,146,34)" fg:x="87" fg:w="26"/><text x="57.4868%" y="447.50">&lt;macroquad::Stage as miniq..</text></g><g><title>macroquad::Context::end_frame (2 samples, 1.32%)</title><rect x="73.0263%" y="421" width="1.3158%" height="15" fill="rgb(228,22,38)" fg:x="111" fg:w="2"/><text x="73.2763%" y="431.50"></text></g><g><title>macroquad::experimental::scene::update (2 samples, 1.32%)</title><rect x="73.0263%" y="405" width="1.3158%" height="15" fill="rgb(235,168,5)" fg:x="111" fg:w="2"/><text x="73.2763%" y="415.50"></text></g><g><title>macroquad::experimental::scene::Scene::update (2 samples, 1.32%)</title><rect x="73.0263%" y="389" width="1.3158%" height="15" fill="rgb(221,155,16)" fg:x="111" fg:w="2"/><text x="73.2763%" y="399.50"></text></g><g><title>macroquad::camera::set_camera (2 samples, 1.32%)</title><rect x="73.0263%" y="373" width="1.3158%" height="15" fill="rgb(215,215,53)" fg:x="111" fg:w="2"/><text x="73.2763%" y="383.50"></text></g><g><title>macroquad::Context::perform_render_passes (2 samples, 1.32%)</title><rect x="73.0263%" y="357" width="1.3158%" height="15" fill="rgb(223,4,10)" fg:x="111" fg:w="2"/><text x="73.2763%" y="367.50"></text></g><g><title>macroquad::quad_gl::QuadGl::draw (2 samples, 1.32%)</title><rect x="73.0263%" y="341" width="1.3158%" height="15" fill="rgb(234,103,6)" fg:x="111" fg:w="2"/><text x="73.2763%" y="351.50"></text></g><g><title>miniquad::graphics::GraphicsContext::apply_pipeline (1 samples, 0.66%)</title><rect x="73.6842%" y="325" width="0.6579%" height="15" fill="rgb(227,97,0)" fg:x="112" fg:w="1"/><text x="73.9342%" y="335.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="74.3421%" y="309" width="0.6579%" height="15" fill="rgb(234,150,53)" fg:x="113" fg:w="1"/><text x="74.5921%" y="319.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="74.3421%" y="293" width="0.6579%" height="15" fill="rgb(228,201,54)" fg:x="113" fg:w="1"/><text x="74.5921%" y="303.50"></text></g><g><title>cfree (1 samples, 0.66%)</title><rect x="74.3421%" y="277" width="0.6579%" height="15" fill="rgb(222,22,37)" fg:x="113" fg:w="1"/><text x="74.5921%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="74.3421%" y="261" width="0.6579%" height="15" fill="rgb(237,53,32)" fg:x="113" fg:w="1"/><text x="74.5921%" y="271.50"></text></g><g><title>XCloseDisplay (2 samples, 1.32%)</title><rect x="74.3421%" y="437" width="1.3158%" height="15" fill="rgb(233,25,53)" fg:x="113" fg:w="2"/><text x="74.5921%" y="447.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (2 samples, 1.32%)</title><rect x="74.3421%" y="421" width="1.3158%" height="15" fill="rgb(210,40,34)" fg:x="113" fg:w="2"/><text x="74.5921%" y="431.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (2 samples, 1.32%)</title><rect x="74.3421%" y="405" width="1.3158%" height="15" fill="rgb(241,220,44)" fg:x="113" fg:w="2"/><text x="74.5921%" y="415.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (2 samples, 1.32%)</title><rect x="74.3421%" y="389" width="1.3158%" height="15" fill="rgb(235,28,35)" fg:x="113" fg:w="2"/><text x="74.5921%" y="399.50"></text></g><g><title>[iris_dri.so] (2 samples, 1.32%)</title><rect x="74.3421%" y="373" width="1.3158%" height="15" fill="rgb(210,56,17)" fg:x="113" fg:w="2"/><text x="74.5921%" y="383.50"></text></g><g><title>[iris_dri.so] (2 samples, 1.32%)</title><rect x="74.3421%" y="357" width="1.3158%" height="15" fill="rgb(224,130,29)" fg:x="113" fg:w="2"/><text x="74.5921%" y="367.50"></text></g><g><title>[iris_dri.so] (2 samples, 1.32%)</title><rect x="74.3421%" y="341" width="1.3158%" height="15" fill="rgb(235,212,8)" fg:x="113" fg:w="2"/><text x="74.5921%" y="351.50"></text></g><g><title>[iris_dri.so] (2 samples, 1.32%)</title><rect x="74.3421%" y="325" width="1.3158%" height="15" fill="rgb(223,33,50)" fg:x="113" fg:w="2"/><text x="74.5921%" y="335.50"></text></g><g><title>cfree (1 samples, 0.66%)</title><rect x="75.0000%" y="309" width="0.6579%" height="15" fill="rgb(219,149,13)" fg:x="114" fg:w="1"/><text x="75.2500%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="75.0000%" y="293" width="0.6579%" height="15" fill="rgb(250,156,29)" fg:x="114" fg:w="1"/><text x="75.2500%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="75.0000%" y="277" width="0.6579%" height="15" fill="rgb(216,193,19)" fg:x="114" fg:w="1"/><text x="75.2500%" y="287.50"></text></g><g><title>XNextEvent (1 samples, 0.66%)</title><rect x="75.6579%" y="437" width="0.6579%" height="15" fill="rgb(216,135,14)" fg:x="115" fg:w="1"/><text x="75.9079%" y="447.50"></text></g><g><title>_XFreeEventCookies (1 samples, 0.66%)</title><rect x="75.6579%" y="421" width="0.6579%" height="15" fill="rgb(241,47,5)" fg:x="115" fg:w="1"/><text x="75.9079%" y="431.50"></text></g><g><title>[iris_dri.so] (2 samples, 1.32%)</title><rect x="80.2632%" y="357" width="1.3158%" height="15" fill="rgb(233,42,35)" fg:x="122" fg:w="2"/><text x="80.5132%" y="367.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="80.9211%" y="341" width="0.6579%" height="15" fill="rgb(231,13,6)" fg:x="123" fg:w="1"/><text x="81.1711%" y="351.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (9 samples, 5.92%)</title><rect x="76.3158%" y="421" width="5.9211%" height="15" fill="rgb(207,181,40)" fg:x="116" fg:w="9"/><text x="76.5658%" y="431.50">[libGLX_..</text></g><g><title>[libGLX_mesa.so.0.0.0] (9 samples, 5.92%)</title><rect x="76.3158%" y="405" width="5.9211%" height="15" fill="rgb(254,173,49)" fg:x="116" fg:w="9"/><text x="76.5658%" y="415.50">[libGLX_..</text></g><g><title>[libGLX_mesa.so.0.0.0] (9 samples, 5.92%)</title><rect x="76.3158%" y="389" width="5.9211%" height="15" fill="rgb(221,1,38)" fg:x="116" fg:w="9"/><text x="76.5658%" y="399.50">[libGLX_..</text></g><g><title>[libGLX_mesa.so.0.0.0] (9 samples, 5.92%)</title><rect x="76.3158%" y="373" width="5.9211%" height="15" fill="rgb(206,124,46)" fg:x="116" fg:w="9"/><text x="76.5658%" y="383.50">[libGLX_..</text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.66%)</title><rect x="81.5789%" y="357" width="0.6579%" height="15" fill="rgb(249,21,11)" fg:x="124" fg:w="1"/><text x="81.8289%" y="367.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.66%)</title><rect x="81.5789%" y="341" width="0.6579%" height="15" fill="rgb(222,201,40)" fg:x="124" fg:w="1"/><text x="81.8289%" y="351.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (2 samples, 1.32%)</title><rect x="82.2368%" y="389" width="1.3158%" height="15" fill="rgb(235,61,29)" fg:x="125" fg:w="2"/><text x="82.4868%" y="399.50"></text></g><g><title>miniquad::native::linux_x11::glx::Glx::init (12 samples, 7.89%)</title><rect x="76.3158%" y="437" width="7.8947%" height="15" fill="rgb(219,207,3)" fg:x="116" fg:w="12"/><text x="76.5658%" y="447.50">miniquad::n..</text></g><g><title>miniquad::native::linux_x11::glx::choose_fbconfig (3 samples, 1.97%)</title><rect x="82.2368%" y="421" width="1.9737%" height="15" fill="rgb(222,56,46)" fg:x="125" fg:w="3"/><text x="82.4868%" y="431.50">m..</text></g><g><title>miniquad::native::linux_x11::glx::choose_fbconfig::{{closure}} (3 samples, 1.97%)</title><rect x="82.2368%" y="405" width="1.9737%" height="15" fill="rgb(239,76,54)" fg:x="125" fg:w="3"/><text x="82.4868%" y="415.50">m..</text></g><g><title>glXGetFBConfigAttrib (1 samples, 0.66%)</title><rect x="83.5526%" y="389" width="0.6579%" height="15" fill="rgb(231,124,27)" fg:x="127" fg:w="1"/><text x="83.8026%" y="399.50"></text></g><g><title>[libGLX.so.0.0.0] (1 samples, 0.66%)</title><rect x="83.5526%" y="373" width="0.6579%" height="15" fill="rgb(249,195,6)" fg:x="127" fg:w="1"/><text x="83.8026%" y="383.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.66%)</title><rect x="83.5526%" y="357" width="0.6579%" height="15" fill="rgb(237,174,47)" fg:x="127" fg:w="1"/><text x="83.8026%" y="367.50"></text></g><g><title>[libGLX.so.0.0.0] (1 samples, 0.66%)</title><rect x="84.2105%" y="389" width="0.6579%" height="15" fill="rgb(206,201,31)" fg:x="128" fg:w="1"/><text x="84.4605%" y="399.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.66%)</title><rect x="84.2105%" y="373" width="0.6579%" height="15" fill="rgb(231,57,52)" fg:x="128" fg:w="1"/><text x="84.4605%" y="383.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.66%)</title><rect x="84.2105%" y="357" width="0.6579%" height="15" fill="rgb(248,177,22)" fg:x="128" fg:w="1"/><text x="84.4605%" y="367.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="84.2105%" y="341" width="0.6579%" height="15" fill="rgb(215,211,37)" fg:x="128" fg:w="1"/><text x="84.4605%" y="351.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="84.2105%" y="325" width="0.6579%" height="15" fill="rgb(241,128,51)" fg:x="128" fg:w="1"/><text x="84.4605%" y="335.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="84.2105%" y="309" width="0.6579%" height="15" fill="rgb(227,165,31)" fg:x="128" fg:w="1"/><text x="84.4605%" y="319.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="84.2105%" y="293" width="0.6579%" height="15" fill="rgb(228,167,24)" fg:x="128" fg:w="1"/><text x="84.4605%" y="303.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="84.2105%" y="277" width="0.6579%" height="15" fill="rgb(228,143,12)" fg:x="128" fg:w="1"/><text x="84.4605%" y="287.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="84.2105%" y="261" width="0.6579%" height="15" fill="rgb(249,149,8)" fg:x="128" fg:w="1"/><text x="84.4605%" y="271.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="84.2105%" y="245" width="0.6579%" height="15" fill="rgb(243,35,44)" fg:x="128" fg:w="1"/><text x="84.4605%" y="255.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.66%)</title><rect x="84.2105%" y="229" width="0.6579%" height="15" fill="rgb(246,89,9)" fg:x="128" fg:w="1"/><text x="84.4605%" y="239.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.66%)</title><rect x="84.2105%" y="213" width="0.6579%" height="15" fill="rgb(233,213,13)" fg:x="128" fg:w="1"/><text x="84.4605%" y="223.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.66%)</title><rect x="84.2105%" y="197" width="0.6579%" height="15" fill="rgb(233,141,41)" fg:x="128" fg:w="1"/><text x="84.4605%" y="207.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="84.2105%" y="181" width="0.6579%" height="15" fill="rgb(239,167,4)" fg:x="128" fg:w="1"/><text x="84.4605%" y="191.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="84.2105%" y="165" width="0.6579%" height="15" fill="rgb(209,217,16)" fg:x="128" fg:w="1"/><text x="84.4605%" y="175.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="84.2105%" y="149" width="0.6579%" height="15" fill="rgb(219,88,35)" fg:x="128" fg:w="1"/><text x="84.4605%" y="159.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="84.2105%" y="133" width="0.6579%" height="15" fill="rgb(220,193,23)" fg:x="128" fg:w="1"/><text x="84.4605%" y="143.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="84.2105%" y="117" width="0.6579%" height="15" fill="rgb(230,90,52)" fg:x="128" fg:w="1"/><text x="84.4605%" y="127.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="84.2105%" y="101" width="0.6579%" height="15" fill="rgb(252,106,19)" fg:x="128" fg:w="1"/><text x="84.4605%" y="111.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="84.2105%" y="85" width="0.6579%" height="15" fill="rgb(206,74,20)" fg:x="128" fg:w="1"/><text x="84.4605%" y="95.50"></text></g><g><title>macroquad::Window::from_config (48 samples, 31.58%)</title><rect x="56.5789%" y="501" width="31.5789%" height="15" fill="rgb(230,138,44)" fg:x="86" fg:w="48"/><text x="56.8289%" y="511.50">macroquad::Window::from_config</text></g><g><title>miniquad::start (48 samples, 31.58%)</title><rect x="56.5789%" y="485" width="31.5789%" height="15" fill="rgb(235,182,43)" fg:x="86" fg:w="48"/><text x="56.8289%" y="495.50">miniquad::start</text></g><g><title>miniquad::native::linux_x11::run (48 samples, 31.58%)</title><rect x="56.5789%" y="469" width="31.5789%" height="15" fill="rgb(242,16,51)" fg:x="86" fg:w="48"/><text x="56.8289%" y="479.50">miniquad::native::linux_x11::run</text></g><g><title>miniquad::native::linux_x11::glx_main_loop (47 samples, 30.92%)</title><rect x="57.2368%" y="453" width="30.9211%" height="15" fill="rgb(248,9,4)" fg:x="87" fg:w="47"/><text x="57.4868%" y="463.50">miniquad::native::linux_x11::glx_main_loop</text></g><g><title>miniquad::native::linux_x11::glx::Glx::swap_interval (6 samples, 3.95%)</title><rect x="84.2105%" y="437" width="3.9474%" height="15" fill="rgb(210,31,22)" fg:x="128" fg:w="6"/><text x="84.4605%" y="447.50">mini..</text></g><g><title>[libGLX.so.0.0.0] (6 samples, 3.95%)</title><rect x="84.2105%" y="421" width="3.9474%" height="15" fill="rgb(239,54,39)" fg:x="128" fg:w="6"/><text x="84.4605%" y="431.50">[lib..</text></g><g><title>[libGLX.so.0.0.0] (6 samples, 3.95%)</title><rect x="84.2105%" y="405" width="3.9474%" height="15" fill="rgb(230,99,41)" fg:x="128" fg:w="6"/><text x="84.4605%" y="415.50">[lib..</text></g><g><title>__glDispatchMakeCurrent (5 samples, 3.29%)</title><rect x="84.8684%" y="389" width="3.2895%" height="15" fill="rgb(253,106,12)" fg:x="129" fg:w="5"/><text x="85.1184%" y="399.50">__g..</text></g><g><title>[libGLdispatch.so.0.0.0] (5 samples, 3.29%)</title><rect x="84.8684%" y="373" width="3.2895%" height="15" fill="rgb(213,46,41)" fg:x="129" fg:w="5"/><text x="85.1184%" y="383.50">[li..</text></g><g><title>_glapi_get_proc_address (5 samples, 3.29%)</title><rect x="84.8684%" y="357" width="3.2895%" height="15" fill="rgb(215,133,35)" fg:x="129" fg:w="5"/><text x="85.1184%" y="367.50">_gl..</text></g><g><title>[libglapi.so.0.0.0] (5 samples, 3.29%)</title><rect x="84.8684%" y="341" width="3.2895%" height="15" fill="rgb(213,28,5)" fg:x="129" fg:w="5"/><text x="85.1184%" y="351.50">[li..</text></g><g><title>[libc.so.6] (5 samples, 3.29%)</title><rect x="84.8684%" y="325" width="3.2895%" height="15" fill="rgb(215,77,49)" fg:x="129" fg:w="5"/><text x="85.1184%" y="335.50">[li..</text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw (2 samples, 1.32%)</title><rect x="88.1579%" y="469" width="1.3158%" height="15" fill="rgb(248,100,22)" fg:x="134" fg:w="2"/><text x="88.4079%" y="479.50"></text></g><g><title>[iris_dri.so] (2 samples, 1.32%)</title><rect x="88.1579%" y="453" width="1.3158%" height="15" fill="rgb(208,67,9)" fg:x="134" fg:w="2"/><text x="88.4079%" y="463.50"></text></g><g><title>[iris_dri.so] (2 samples, 1.32%)</title><rect x="88.1579%" y="437" width="1.3158%" height="15" fill="rgb(219,133,21)" fg:x="134" fg:w="2"/><text x="88.4079%" y="447.50"></text></g><g><title>[iris_dri.so] (2 samples, 1.32%)</title><rect x="88.1579%" y="421" width="1.3158%" height="15" fill="rgb(246,46,29)" fg:x="134" fg:w="2"/><text x="88.4079%" y="431.50"></text></g><g><title>[iris_dri.so] (2 samples, 1.32%)</title><rect x="88.1579%" y="405" width="1.3158%" height="15" fill="rgb(246,185,52)" fg:x="134" fg:w="2"/><text x="88.4079%" y="415.50"></text></g><g><title>[iris_dri.so] (2 samples, 1.32%)</title><rect x="88.1579%" y="389" width="1.3158%" height="15" fill="rgb(252,136,11)" fg:x="134" fg:w="2"/><text x="88.4079%" y="399.50"></text></g><g><title>[iris_dri.so] (2 samples, 1.32%)</title><rect x="88.1579%" y="373" width="1.3158%" height="15" fill="rgb(219,138,53)" fg:x="134" fg:w="2"/><text x="88.4079%" y="383.50"></text></g><g><title>[iris_dri.so] (2 samples, 1.32%)</title><rect x="88.1579%" y="357" width="1.3158%" height="15" fill="rgb(211,51,23)" fg:x="134" fg:w="2"/><text x="88.4079%" y="367.50"></text></g><g><title>[iris_dri.so] (2 samples, 1.32%)</title><rect x="88.1579%" y="341" width="1.3158%" height="15" fill="rgb(247,221,28)" fg:x="134" fg:w="2"/><text x="88.4079%" y="351.50"></text></g><g><title>[iris_dri.so] (2 samples, 1.32%)</title><rect x="88.1579%" y="325" width="1.3158%" height="15" fill="rgb(251,222,45)" fg:x="134" fg:w="2"/><text x="88.4079%" y="335.50"></text></g><g><title>[iris_dri.so] (2 samples, 1.32%)</title><rect x="88.1579%" y="309" width="1.3158%" height="15" fill="rgb(217,162,53)" fg:x="134" fg:w="2"/><text x="88.4079%" y="319.50"></text></g><g><title>[iris_dri.so] (2 samples, 1.32%)</title><rect x="88.1579%" y="293" width="1.3158%" height="15" fill="rgb(229,93,14)" fg:x="134" fg:w="2"/><text x="88.4079%" y="303.50"></text></g><g><title>[iris_dri.so] (2 samples, 1.32%)</title><rect x="88.1579%" y="277" width="1.3158%" height="15" fill="rgb(209,67,49)" fg:x="134" fg:w="2"/><text x="88.4079%" y="287.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="88.8158%" y="261" width="0.6579%" height="15" fill="rgb(213,87,29)" fg:x="135" fg:w="1"/><text x="89.0658%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="88.8158%" y="245" width="0.6579%" height="15" fill="rgb(205,151,52)" fg:x="135" fg:w="1"/><text x="89.0658%" y="255.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="89.4737%" y="405" width="0.6579%" height="15" fill="rgb(253,215,39)" fg:x="136" fg:w="1"/><text x="89.7237%" y="415.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="89.4737%" y="389" width="0.6579%" height="15" fill="rgb(221,220,41)" fg:x="136" fg:w="1"/><text x="89.7237%" y="399.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="89.4737%" y="373" width="0.6579%" height="15" fill="rgb(218,133,21)" fg:x="136" fg:w="1"/><text x="89.7237%" y="383.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="89.4737%" y="357" width="0.6579%" height="15" fill="rgb(221,193,43)" fg:x="136" fg:w="1"/><text x="89.7237%" y="367.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="89.4737%" y="341" width="0.6579%" height="15" fill="rgb(240,128,52)" fg:x="136" fg:w="1"/><text x="89.7237%" y="351.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="89.4737%" y="325" width="0.6579%" height="15" fill="rgb(253,114,12)" fg:x="136" fg:w="1"/><text x="89.7237%" y="335.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="89.4737%" y="309" width="0.6579%" height="15" fill="rgb(215,223,47)" fg:x="136" fg:w="1"/><text x="89.7237%" y="319.50"></text></g><g><title>XML_ParseBuffer (1 samples, 0.66%)</title><rect x="89.4737%" y="293" width="0.6579%" height="15" fill="rgb(248,225,23)" fg:x="136" fg:w="1"/><text x="89.7237%" y="303.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.66%)</title><rect x="89.4737%" y="277" width="0.6579%" height="15" fill="rgb(250,108,0)" fg:x="136" fg:w="1"/><text x="89.7237%" y="287.50"></text></g><g><title>[iris_dri.so] (1 samples, 0.66%)</title><rect x="92.1053%" y="181" width="0.6579%" height="15" fill="rgb(228,208,7)" fg:x="140" fg:w="1"/><text x="92.3553%" y="191.50"></text></g><g><title>std::ios_base::Init::Init (1 samples, 0.66%)</title><rect x="92.1053%" y="165" width="0.6579%" height="15" fill="rgb(244,45,10)" fg:x="140" fg:w="1"/><text x="92.3553%" y="175.50"></text></g><g><title>std::ios_base::Init::Init (1 samples, 0.66%)</title><rect x="92.1053%" y="149" width="0.6579%" height="15" fill="rgb(207,125,25)" fg:x="140" fg:w="1"/><text x="92.3553%" y="159.50"></text></g><g><title>__gnu_cxx::stdio_sync_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::stdio_sync_filebuf (1 samples, 0.66%)</title><rect x="92.1053%" y="133" width="0.6579%" height="15" fill="rgb(210,195,18)" fg:x="140" fg:w="1"/><text x="92.3553%" y="143.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::basic_streambuf (1 samples, 0.66%)</title><rect x="92.1053%" y="117" width="0.6579%" height="15" fill="rgb(249,80,12)" fg:x="140" fg:w="1"/><text x="92.3553%" y="127.50"></text></g><g><title>std::locale::locale (1 samples, 0.66%)</title><rect x="92.1053%" y="101" width="0.6579%" height="15" fill="rgb(221,65,9)" fg:x="140" fg:w="1"/><text x="92.3553%" y="111.50"></text></g><g><title>std::locale::_S_initialize_once (1 samples, 0.66%)</title><rect x="92.1053%" y="85" width="0.6579%" height="15" fill="rgb(235,49,36)" fg:x="140" fg:w="1"/><text x="92.3553%" y="95.50"></text></g><g><title>std::locale::_S_initialize_once (1 samples, 0.66%)</title><rect x="92.1053%" y="69" width="0.6579%" height="15" fill="rgb(225,32,20)" fg:x="140" fg:w="1"/><text x="92.3553%" y="79.50"></text></g><g><title>std::locale::_Impl::_Impl (1 samples, 0.66%)</title><rect x="92.1053%" y="53" width="0.6579%" height="15" fill="rgb(215,141,46)" fg:x="140" fg:w="1"/><text x="92.3553%" y="63.50"></text></g><g><title>std::locale::_Impl::_M_init_facet&lt;std::codecvt&lt;char, char, __mbstate_t&gt; &gt; (1 samples, 0.66%)</title><rect x="92.1053%" y="37" width="0.6579%" height="15" fill="rgb(250,160,47)" fg:x="140" fg:w="1"/><text x="92.3553%" y="47.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (10 samples, 6.58%)</title><rect x="90.1316%" y="405" width="6.5789%" height="15" fill="rgb(216,222,40)" fg:x="137" fg:w="10"/><text x="90.3816%" y="415.50">[libGLX_m..</text></g><g><title>glPrimitiveBoundingBox (10 samples, 6.58%)</title><rect x="90.1316%" y="389" width="6.5789%" height="15" fill="rgb(234,217,39)" fg:x="137" fg:w="10"/><text x="90.3816%" y="399.50">glPrimiti..</text></g><g><title>glPrimitiveBoundingBox (10 samples, 6.58%)</title><rect x="90.1316%" y="373" width="6.5789%" height="15" fill="rgb(207,178,40)" fg:x="137" fg:w="10"/><text x="90.3816%" y="383.50">glPrimiti..</text></g><g><title>dlopen (10 samples, 6.58%)</title><rect x="90.1316%" y="357" width="6.5789%" height="15" fill="rgb(221,136,13)" fg:x="137" fg:w="10"/><text x="90.3816%" y="367.50">dlopen</text></g><g><title>[libc.so.6] (10 samples, 6.58%)</title><rect x="90.1316%" y="341" width="6.5789%" height="15" fill="rgb(249,199,10)" fg:x="137" fg:w="10"/><text x="90.3816%" y="351.50">[libc.so...</text></g><g><title>_dl_catch_error (10 samples, 6.58%)</title><rect x="90.1316%" y="325" width="6.5789%" height="15" fill="rgb(249,222,13)" fg:x="137" fg:w="10"/><text x="90.3816%" y="335.50">_dl_catch..</text></g><g><title>_dl_catch_exception (10 samples, 6.58%)</title><rect x="90.1316%" y="309" width="6.5789%" height="15" fill="rgb(244,185,38)" fg:x="137" fg:w="10"/><text x="90.3816%" y="319.50">_dl_catch..</text></g><g><title>[libc.so.6] (10 samples, 6.58%)</title><rect x="90.1316%" y="293" width="6.5789%" height="15" fill="rgb(236,202,9)" fg:x="137" fg:w="10"/><text x="90.3816%" y="303.50">[libc.so...</text></g><g><title>[ld-linux-x86-64.so.2] (10 samples, 6.58%)</title><rect x="90.1316%" y="277" width="6.5789%" height="15" fill="rgb(250,229,37)" fg:x="137" fg:w="10"/><text x="90.3816%" y="287.50">[ld-linux..</text></g><g><title>_dl_catch_exception (10 samples, 6.58%)</title><rect x="90.1316%" y="261" width="6.5789%" height="15" fill="rgb(206,174,23)" fg:x="137" fg:w="10"/><text x="90.3816%" y="271.50">_dl_catch..</text></g><g><title>[ld-linux-x86-64.so.2] (10 samples, 6.58%)</title><rect x="90.1316%" y="245" width="6.5789%" height="15" fill="rgb(211,33,43)" fg:x="137" fg:w="10"/><text x="90.3816%" y="255.50">[ld-linux..</text></g><g><title>_dl_catch_exception (10 samples, 6.58%)</title><rect x="90.1316%" y="229" width="6.5789%" height="15" fill="rgb(245,58,50)" fg:x="137" fg:w="10"/><text x="90.3816%" y="239.50">_dl_catch..</text></g><g><title>[ld-linux-x86-64.so.2] (10 samples, 6.58%)</title><rect x="90.1316%" y="213" width="6.5789%" height="15" fill="rgb(244,68,36)" fg:x="137" fg:w="10"/><text x="90.3816%" y="223.50">[ld-linux..</text></g><g><title>[ld-linux-x86-64.so.2] (10 samples, 6.58%)</title><rect x="90.1316%" y="197" width="6.5789%" height="15" fill="rgb(232,229,15)" fg:x="137" fg:w="10"/><text x="90.3816%" y="207.50">[ld-linux..</text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 3.95%)</title><rect x="92.7632%" y="181" width="3.9474%" height="15" fill="rgb(254,30,23)" fg:x="141" fg:w="6"/><text x="93.0132%" y="191.50">[ld-..</text></g><g><title>[ld-linux-x86-64.so.2] (4 samples, 2.63%)</title><rect x="94.0789%" y="165" width="2.6316%" height="15" fill="rgb(235,160,14)" fg:x="143" fg:w="4"/><text x="94.3289%" y="175.50">[l..</text></g><g><title>[unknown] (76 samples, 50.00%)</title><rect x="47.3684%" y="517" width="50.0000%" height="15" fill="rgb(212,155,44)" fg:x="72" fg:w="76"/><text x="47.6184%" y="527.50">[unknown]</text></g><g><title>miniquad::native::linux_x11::run (14 samples, 9.21%)</title><rect x="88.1579%" y="501" width="9.2105%" height="15" fill="rgb(226,2,50)" fg:x="134" fg:w="14"/><text x="88.4079%" y="511.50">miniquad::nat..</text></g><g><title>miniquad::native::linux_x11::glx_main_loop (14 samples, 9.21%)</title><rect x="88.1579%" y="485" width="9.2105%" height="15" fill="rgb(234,177,6)" fg:x="134" fg:w="14"/><text x="88.4079%" y="495.50">miniquad::nat..</text></g><g><title>miniquad::native::linux_x11::glx::Glx::init (12 samples, 7.89%)</title><rect x="89.4737%" y="469" width="7.8947%" height="15" fill="rgb(217,24,9)" fg:x="136" fg:w="12"/><text x="89.7237%" y="479.50">miniquad::n..</text></g><g><title>[libGLX_mesa.so.0.0.0] (12 samples, 7.89%)</title><rect x="89.4737%" y="453" width="7.8947%" height="15" fill="rgb(220,13,46)" fg:x="136" fg:w="12"/><text x="89.7237%" y="463.50">[libGLX_mes..</text></g><g><title>[libGLX_mesa.so.0.0.0] (12 samples, 7.89%)</title><rect x="89.4737%" y="437" width="7.8947%" height="15" fill="rgb(239,221,27)" fg:x="136" fg:w="12"/><text x="89.7237%" y="447.50">[libGLX_mes..</text></g><g><title>[libGLX_mesa.so.0.0.0] (12 samples, 7.89%)</title><rect x="89.4737%" y="421" width="7.8947%" height="15" fill="rgb(222,198,25)" fg:x="136" fg:w="12"/><text x="89.7237%" y="431.50">[libGLX_mes..</text></g><g><title>glPrimitiveBoundingBox (1 samples, 0.66%)</title><rect x="96.7105%" y="405" width="0.6579%" height="15" fill="rgb(211,99,13)" fg:x="147" fg:w="1"/><text x="96.9605%" y="415.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.66%)</title><rect x="96.7105%" y="389" width="0.6579%" height="15" fill="rgb(232,111,31)" fg:x="147" fg:w="1"/><text x="96.9605%" y="399.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.66%)</title><rect x="96.7105%" y="373" width="0.6579%" height="15" fill="rgb(245,82,37)" fg:x="147" fg:w="1"/><text x="96.9605%" y="383.50"></text></g><g><title>XML_ParseBuffer (1 samples, 0.66%)</title><rect x="96.7105%" y="357" width="0.6579%" height="15" fill="rgb(227,149,46)" fg:x="147" fg:w="1"/><text x="96.9605%" y="367.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.66%)</title><rect x="96.7105%" y="341" width="0.6579%" height="15" fill="rgb(218,36,50)" fg:x="147" fg:w="1"/><text x="96.9605%" y="351.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.66%)</title><rect x="96.7105%" y="325" width="0.6579%" height="15" fill="rgb(226,80,48)" fg:x="147" fg:w="1"/><text x="96.9605%" y="335.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.66%)</title><rect x="96.7105%" y="309" width="0.6579%" height="15" fill="rgb(238,224,15)" fg:x="147" fg:w="1"/><text x="96.9605%" y="319.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.66%)</title><rect x="96.7105%" y="293" width="0.6579%" height="15" fill="rgb(241,136,10)" fg:x="147" fg:w="1"/><text x="96.9605%" y="303.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.66%)</title><rect x="96.7105%" y="277" width="0.6579%" height="15" fill="rgb(208,32,45)" fg:x="147" fg:w="1"/><text x="96.9605%" y="287.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.66%)</title><rect x="96.7105%" y="261" width="0.6579%" height="15" fill="rgb(207,135,9)" fg:x="147" fg:w="1"/><text x="96.9605%" y="271.50"></text></g><g><title>all (152 samples, 100%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(206,86,44)" fg:x="0" fg:w="152"/><text x="0.2500%" y="559.50"></text></g><g><title>ChipRay (130 samples, 85.53%)</title><rect x="14.4737%" y="533" width="85.5263%" height="15" fill="rgb(245,177,15)" fg:x="22" fg:w="130"/><text x="14.7237%" y="543.50">ChipRay</text></g><g><title>_start (4 samples, 2.63%)</title><rect x="97.3684%" y="517" width="2.6316%" height="15" fill="rgb(206,64,50)" fg:x="148" fg:w="4"/><text x="97.6184%" y="527.50">_s..</text></g><g><title>__libc_start_main (4 samples, 2.63%)</title><rect x="97.3684%" y="501" width="2.6316%" height="15" fill="rgb(234,36,40)" fg:x="148" fg:w="4"/><text x="97.6184%" y="511.50">__..</text></g><g><title>[libc.so.6] (4 samples, 2.63%)</title><rect x="97.3684%" y="485" width="2.6316%" height="15" fill="rgb(213,64,8)" fg:x="148" fg:w="4"/><text x="97.6184%" y="495.50">[l..</text></g><g><title>exit (4 samples, 2.63%)</title><rect x="97.3684%" y="469" width="2.6316%" height="15" fill="rgb(210,75,36)" fg:x="148" fg:w="4"/><text x="97.6184%" y="479.50">ex..</text></g><g><title>[libc.so.6] (4 samples, 2.63%)</title><rect x="97.3684%" y="453" width="2.6316%" height="15" fill="rgb(229,88,21)" fg:x="148" fg:w="4"/><text x="97.6184%" y="463.50">[l..</text></g><g><title>[iris_dri.so] (4 samples, 2.63%)</title><rect x="97.3684%" y="437" width="2.6316%" height="15" fill="rgb(252,204,47)" fg:x="148" fg:w="4"/><text x="97.6184%" y="447.50">[i..</text></g><g><title>[iris_dri.so] (4 samples, 2.63%)</title><rect x="97.3684%" y="421" width="2.6316%" height="15" fill="rgb(208,77,27)" fg:x="148" fg:w="4"/><text x="97.6184%" y="431.50">[i..</text></g><g><title>[iris_dri.so] (4 samples, 2.63%)</title><rect x="97.3684%" y="405" width="2.6316%" height="15" fill="rgb(221,76,26)" fg:x="148" fg:w="4"/><text x="97.6184%" y="415.50">[i..</text></g><g><title>[libc.so.6] (4 samples, 2.63%)</title><rect x="97.3684%" y="389" width="2.6316%" height="15" fill="rgb(225,139,18)" fg:x="148" fg:w="4"/><text x="97.6184%" y="399.50">[l..</text></g><g><title>[libc.so.6] (4 samples, 2.63%)</title><rect x="97.3684%" y="373" width="2.6316%" height="15" fill="rgb(230,137,11)" fg:x="148" fg:w="4"/><text x="97.6184%" y="383.50">[l..</text></g></svg></svg>